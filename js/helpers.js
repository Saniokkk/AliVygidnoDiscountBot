import crypto from "crypto";
import puppeteer from "puppeteer";
import axios from "axios";

/**
 * –û—á–∏—à–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω—å –≤—ñ–¥ –∫–≤–µ—Ä—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
 * @param {string} –ø—Ä–∏–π–º–∞—î —Ç–µ–∫—Å—Ç –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –ø–∞—Ä—Å–∏—Ç—å –∑ –Ω—å–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ ALi
 * @returns {string} - –ø–æ–≤–µ—Ä—Ç–∞—î —á–∏—Å—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –±–µ–∑ –∫–≤–µ—Ä—ñ-–ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
 **/

export function extractUrl(text) {
  // –†–µ–≥—É–ª—è—Ä–Ω–∏–π –≤–∏—Ä–∞–∑ –¥–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è URL –≤ —Ç–µ–∫—Å—Ç—ñ
  const regex = /https?:\/\/[^\s]+/g;

  // –ü–æ—à—É–∫ –≤—Å—ñ—Ö URL —É —Ç–µ–∫—Å—Ç—ñ
  const matches = text.match(regex);

  // –Ø–∫—â–æ –∑–Ω–∞–π—à–ª–∏ —Ö–æ—á–∞ –± –æ–¥–∏–Ω URL, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–µ—Ä—à–∏–π
  return matches ? matches[0] : null;
}

/**
 * –û—á–∏—à–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω—å –≤—ñ–¥ –∫–≤–µ—Ä—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
 * @param {string} url - –∑–ø–∞—Ä—Å–µ–Ω–∏–π url –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @returns {string} - –ø–æ–≤–µ—Ä—Ç–∞—î —á–∏—Å—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –±–µ–∑ –∫–≤–µ—Ä—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
 **/

export function cleanAliUrlFromAff(url) {
  const urlObj = new URL(url);
  urlObj.search = ""; // –æ—á–∏—â–∞—î –ø–æ–≤–Ω—ñ—Å—Ç—é –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø—ñ—Å–ª—è ?
  return urlObj.toString();
}

/**
 * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—å –∑ –ø—Ä–∏–≤'—è–∑–∫–æ—é —Ä—ñ–∑–Ω–∏—Ö —Ä–æ–∑–¥—ñ–ª—ñ–≤
 * @param {string} url - url —á–∏—Å—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä
 * @returns {Array} - –º–∞—Å–∏–≤ –ø–æ—Å–∏–ª–∞–Ω—å –∑ –ø—Ä–∏–≤'—è–∑–∫–æ—é –¥–æ —Ä—ñ–∑–Ω–∏—Ö —Ä–æ–∑–¥—ñ–ª—ñ–≤
 **/

export function getAliExpressPromoLinks(url) {
  const baseUrl = new URL(url);
  baseUrl.search = ""; // –æ—á–∏—â–∞—î–º–æ –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
  console.log("baseUrl", baseUrl.toString());
  const channelsParams = [
    { sourceType: "620", channel: "coin" },
    { sourceType: "562", channel: "coin" },
    { sourceType: "561", channel: "coin" },
    { sourceType: "680", channel: "coin" },
    { sourceType: "591", channel: "coin" },
    // { sourceType: "570", channel: "coin", afSmartRedirect: "y" },
  ];

  // const channelsParams = [
  //   { sourceType: "620", channel: "coin", afSmartRedirect: "y" },
  //   { sourceType: "562", channel: "sd", afSmartRedirect: "y" },
  //   { sourceType: "561", channel: "limitedoffers", afSmartRedirect: "y" },
  //   { sourceType: "680", channel: "bigSave", afSmartRedirect: "y" },
  //   { sourceType: "591", channel: "choice", afSmartRedirect: "y" },
  //   { sourceType: "570", channel: "choice", afSmartRedirect: "y" },
  // ];

  // 620 –º–æ–Ω–µ—Ç—ã
  // 562 –ó —Å—É–ø–µ—Ä–∑–Ω–∏–∂–∫–æ—é
  // 561 –õ—ñ–º—ñ—Ç–æ–≤–∞–Ω—ñ –∑–Ω–∏–∂–∫–∏:
  // 680 Big Save::
  // 591 –ó–µ–º–ª—è –ø—Ä–∏–∑—ñ–≤:
  // 570 Choice (3+ —Ç–æ–≤–∞—Ä—ñ–≤):

  // –ì–µ–Ω–µ—Ä—É—î–º–æ 4 –≤–µ—Ä—Å—ñ—ó –ø–æ—Å–∏–ª–∞–Ω–Ω—è
  const links = channelsParams.map(
    ({ sourceType, channel, afSmartRedirect }) => {
      const urlCopy = new URL(baseUrl); // —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –±–∞–∑–æ–≤–æ–≥–æ URL
      urlCopy.searchParams.set("sourceType", sourceType);
      urlCopy.searchParams.set("channel", channel);
      // urlCopy.searchParams.set("afSmartRedirect", afSmartRedirect);
      return urlCopy.toString();
    }
  );

  return links;
}

// –†–µ–≥—É–ª—è—Ä–∫–∏
const URL_REGEX =
  /https?:\/\/[^\s<>"]+|www\.[^\s<>"]+|\b(?:s\.click\.|a\.)?aliexpress\.(?:com|ru|es|fr|pt|it|pl|nl|co\.kr|co\.jp|com\.br|com\.tr|com\.vn|us|id|th|ar)(?:\.[\w-]+)?\/[^\s<>"]*/i;
const PRODUCT_ID_REGEX = /\/item\/(\d+)\.html/i;
const STANDARD_ALIEXPRESS_DOMAIN_REGEX =
  /https?:\/\/(?!a\.|s\.click\.)([\w-]+\.)?aliexpress\.(com|ru|es|fr|pt|it|pl|nl|co\.kr|co\.jp|com\.br|com\.tr|com\.vn|us|id\.aliexpress\.com|th\.aliexpress\.com|ar\.aliexpress\.com)(\.([\w-]+))?(\/.*)?/i;
const SHORT_LINK_DOMAIN_REGEX =
  /https?:\/\/(?:s\.click\.aliexpress\.com\/e\/|a\.aliexpress\.com\/_)[a-zA-Z0-9_-]+\/?/i;

// –¢–µ—Å—Ç–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è
function testRegex(regex, str) {
  return regex.test(str);
}

// –§—É–Ω–∫—Ü—ñ—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É
export function getAliExpressLinkType(url) {
  if (PRODUCT_ID_REGEX.test(url)) return "product";
  if (SHORT_LINK_DOMAIN_REGEX.test(url)) return "short";
  // if (STANDARD_ALIEXPRESS_DOMAIN_REGEX.test(url)) return 'standard';
  // if (URL_REGEX.test(url)) return 'url';
  return "unknown";
}

export function getSuccessMessage(promotionLinks) {
  const dataByType = {
    620: { label: "–ó –º–æ–Ω–µ—Ç–Ω–∏–º–∏ –∑–Ω–∏–∂–∫–∞–º–∏", emoji: "üí∞", order: 1 },
    561: { label: "–ó —Å—É–ø–µ—Ä–∑–Ω–∏–∂–∫–æ—é", emoji: "üî•", order: 2 },
    680: { label: "Big save (–≤–µ–ª–∏–∫–∞ –µ–∫–æ–Ω–æ–º—ñ—è)", emoji: "üíØ", order: 3 },
    562: { label: '–ó –∫—É–ø–æ–Ω–æ–º "–ó–µ–º–ª—è –ø—Ä–∏–∑—ñ–≤"', emoji: "üå±", order: 4 },
    591: { label: "–ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Ç—ñ–≤", emoji: "üõç", order: 5 },
  };

  return promotionLinks
    .map(({ promotion_link, source_value }) => {
      const sourceType = defineSourceTypeParamFromFullLink(source_value);
      const typeData = dataByType[sourceType];

      if (!typeData) return null;

      return {
        ...typeData,
        promotion_link,
      };
    })
    .filter(Boolean) // –≤–∏–¥–∞–ª—è—î–º–æ null —è–∫—â–æ sourceType –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
    .sort((a, b) => a.order - b.order)
    .map(
      ({ emoji, label, promotion_link }) =>
        `${emoji} <a href="${promotion_link}">${label}</a>`
    )
    .join("\n\n");
}

export async function getOriginalUrlFromShort(url) {
  const res = await axios.get(url, { maxRedirects: 5 });
  const responseUrl = res?.request?.res?.responseUrl;
  const urlCopy = new URL(responseUrl);

  if (urlCopy.origin === "https://star.aliexpress.com") {
    const browser = await puppeteer.launch({ headless: true });
    const page = await browser.newPage();
    await page.goto(url, { waitUntil: "networkidle2" });
    const finalUrl = page.url();
    await browser.close();
    console.log("https://star.aliexpress.com");
    return finalUrl;
  }
  console.log("NO");
  return responseUrl;
}

function defineSourceTypeParamFromFullLink(fullLink) {
  const urlCopy = new URL(fullLink); // —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –±–∞–∑–æ–≤–æ–≥–æ URL
  const sourceType = urlCopy.searchParams.get("sourceType");
  return sourceType;
}

console.log(
  defineSourceTypeParamFromFullLink(
    "https://www.aliexpress.com/item/1005007550235757.html?sourceType=561&channel=coin"
  )
);

console.log(await getOriginalUrlFromShort("https://a.aliexpress.com/_EuARbgK"));
// –ü—Ä–∏–∫–ª–∞–¥–∏
console.log(getAliExpressLinkType("https://a.aliexpress.com/_EuARbgK")); // 'short'
console.log(
  getAliExpressLinkType("https://www.aliexpress.com/item/1005001234567890.html")
); // 'product'
console.log(
  getAliExpressLinkType(
    "https://www.aliexpress.com/category/100003109/women-clothing.html"
  )
); // 'standard'
console.log(getAliExpressLinkType("https://example.com")); // 'unknown'
